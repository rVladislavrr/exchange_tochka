"""create Tables

Revision ID: c0d112bab943
Revises: 
Create Date: 2025-05-06 23:55:57.386847

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c0d112bab943'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instruments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker')
    )
    op.create_table('users',
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='roleenum'), nullable=False),
    sa.Column('api_key', sa.String(length=255), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_users_api_key'), 'users', ['api_key'], unique=False)
    op.create_index(op.f('ix_users_balance'), 'users', ['balance'], unique=False)
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('instrument', sa.Integer(), nullable=False),
    sa.Column('order_type', sa.String(length=6), nullable=False),
    sa.Column('side', sa.String(length=4), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'CANCELLED', 'COMPLETED', 'PENDING', name='statusenum'), nullable=False),
    sa.Column('activation_time', sa.DateTime(), nullable=True),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['instrument'], ['instruments.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_balances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('available_balance', sa.Float(), nullable=False),
    sa.Column('frozen_balance', sa.Float(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('buy_order_id', sa.Integer(), nullable=False),
    sa.Column('sell_order_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['buy_order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['sell_order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_trade_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('trade_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['trade_id'], ['trade_log.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_trade_history')
    op.drop_table('trade_log')
    op.drop_table('user_balances')
    op.drop_table('price_history')
    op.drop_table('orders')
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.drop_index(op.f('ix_users_balance'), table_name='users')
    op.drop_index(op.f('ix_users_api_key'), table_name='users')
    op.drop_table('users')
    op.drop_table('instruments')
    # ### end Alembic commands ###
